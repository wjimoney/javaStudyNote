
#启动服务器
	#默认启动
	redis-server 
	#指定端口启动
	redis-server --port 6380 
	
	#指定配置文件启动
	redis-server redis.conf

#连接
    #默认;连接 6379
	redis-cli 	
	#指定端口
    redis-cli -p 6380
	#指定端口
    redis-cli -h 192.168.25.135 -p 6380



#key 的统一操作
	#删除指定key
	del key
	#获取key是否存在
	exists key
	#获取key的类型
	type key
	#排序
	sort
	#改名
	rename key newkey
	renamenx key newkey
	
	
	#为指定key设置有效期
	expire key seconds
	pexpire key milliseconds
	expireat key timestamp
	pexpireat key milliseconds-timestamp
	#获取key的有效时间
	ttl key
	pttl key
	#切换key从时效性转换为永久性
	persist key
	#查询key
	keys pattern
	
		keys *  keys    #查询所有
		it*  keys       #查询所有以it开头
		*heima          #查询所有以heima结尾
		keys ??heima    #查询所有前面两个字符任意，后面以heima结尾 查询所有以
		keys user:?     #user:开头，最后一个字符任意
		keys u[st]er:1  #查询所有以u开头，以er:1结尾，中间包含一个字母，s或t



#String  类型
	#添加/修改数据添加/修改数据
	set key value
	#获取数据
	get key
	#删除数据
	del key
	#判定性添加数据(加锁)
	setnx key value  
	#添加/修改多个数据
	mset key1 value1 key2 value2 …
	#获取多个数据
	mget key1 key2 …
	#获取数据字符个数（字符串长度）
	strlen key
	#追加信息到原始信息后部（如果原始信息存在就追加，否则新建）
	append key value
	
	#设置数值数据增加指定范围的值
	incr key
	incrby key increment
	incrbyfloat key increment
	#设置数值数据减少指定范围的值
	decr key
	decrby key increment
	#置数据具有指定的生命周期
	setex key seconds value
	psetex key milliseconds value
	
#hash类型
	#添加/修改数据
	hset key field value
	#获取数据
	hget key field
	hgetall key
	#删除数据
	hdel key field1 [field2]
	#设置field的值，如果该field"存在"则不做任何操作
	hsetnx key field value
	#添加/修改多个数据
	hmset key field1 value1 field2 value2 …
	#获取多个数据
	hmget key field1 field2 …
	#获取哈希表中字段的数量
	hlen key
	#获取哈希表中是否存在指定的字段
	hexists key field
	
	
	#获取哈希表中所有的字段名或字段值
	hkeys key
	hvals key
	#设置指定字段的数值数据增加指定范围的值
	hincrby key field increment
	incrbyfloat key field increment
	
 list 类型
	#添加/修改数据
	左left
	lpush key value1 [value2] ……
	右:right
	rpush key value1 [value2] ……
	
	#获取数据
	lrange key start stop
	lindex key index
	llen key
	#获取并移除数据
	lpop key
	rpop key
	#移除指定数据
	lrem key count value
	#规定时间内获取并移除数据
	blpop key1 [key2] timeout
	brpop key1 [key2] timeout
	brpoplpush source destination timeout
set类型
	#添加数据
	sadd key member1 [member2]
	#获取全部数据
	smembers key
	#删除数据
	srem key member1 [member2]
	#获取集合数据总量
	scard key
	#判断集合中是否包含指定数据
	sismember key member
	#随机获取集合中指定数量的数据
	srandmember key [count]
	#随机获取集中的某个数据并将该数据移除集合
	spop key [count]
	
	
	
	求两个集合的交、并、差集
	# 交
	sinter key1 [key2 …]  
	# 并
	sunion key1 [key2 …]  
	# 差
	sdiff key1 [key2 …]
	
	#求两个集合的交、并、差集并存储到指定集合中
	sinterstore destinationKey key1 [key2 …]  
	sunionstore destinationKey key1 [key2 …]  
	sdiffstore  destinationKey key1 [key2 …]
	
	#将指定数据从原始集合中移动到目标集合中
	smove sourceKey destinationKey member
	
 
	
	
	
	
	